{"version":3,"sources":["view/login/loginCtrl.js"],"names":[],"mappings":"AAAA,CAAC,WAAW;IACR;;IAEA,UAAU,UAAU,CAAC,eAAe;IACpC;SACK,OAAO;SACP,WAAW,aAAa;;;IAG7B,SAAS,UAAU,aAAa,gBAAgB;QAC5C,IAAI,KAAK;QACT,GAAG,eAAe;QAClB,GAAG,QAAQ,CAAC,CAAC,MAAM,QAAQ,IAAI;oBACnB,CAAC,MAAM,MAAM,IAAI;oBACjB,CAAC,MAAM,QAAQ,IAAI;oBACnB,CAAC,MAAM,QAAQ,IAAI;QAC/B,GAAG,QAAQ;YACP,SAAS;YACT,MAAM;gBACF,QAAQ;;;QAGhB,GAAG,UAAU;;QAEb;;QAEA,SAAS,UAAU;;;YAGf,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,MAAM,QAAQ,KAAK;gBAClC,GAAG,GAAG,gBAAgB,GAAG,MAAM,GAAG,IAAI;oBAClC,GAAG,eAAe,GAAG,MAAM;;;;;;YAMnC,GAAG,MAAM,OAAO,GAAG;YACnB,YAAY,QAAQ,GAAG;;;QAG3B,SAAS,OAAO;;;;KAInB","sourcesContent":["(function() {\r\n    'use strict';\r\n\r\n    loginCtrl.$inject = [\"dataFactory\", \"sessionFactory\"];\r\n    angular\r\n        .module('mqtt')\r\n        .controller('loginCtrl', loginCtrl)\r\n\r\n    /** @ngInject */\r\n    function loginCtrl(dataFactory, sessionFactory) {\r\n        var vm = this;\r\n        vm.protocolType = null;\r\n        vm.types = [{name: \"MQTT\", id: 1},\r\n                    {name: \"SN\", id: 2},\r\n                    {name: \"COAP\", id: 3},\r\n                    {name: \"AMQP\", id: 4}]\r\n        vm.login = {\r\n            isClean: false,\r\n            will: {\r\n                retain: false\r\n            }\r\n        };\r\n        vm.connect = connect;\r\n\r\n        init();\r\n\r\n        function connect() {\r\n            // vm.login(vm.login);\r\n           \r\n            for (var i=0; i<vm.types.length; i++) {\r\n                if(vm.protocolType == vm.types[i].id) {                   \r\n                    vm.protocolType = vm.types[i];\r\n                    // if(vm.types[i].id == 2 ){\r\n                    //     vm.protocolType.name = 'SN';\r\n                    // }\r\n                }\r\n            }\r\n            vm.login.type = vm.protocolType;    \r\n            dataFactory.connect(vm.login);\r\n        }\r\n\r\n        function init() {}\r\n\r\n    }\r\n\r\n}());"],"file":"../../../view/login/loginCtrl.js"}